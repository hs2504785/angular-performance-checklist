{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { SelectProject } from '../projects/state/projects.actions';\nimport { ProjectsSelectors } from '../projects/state/projects.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nexport let ProjectExistsGuard = /*#__PURE__*/(() => {\n  class ProjectExistsGuard {\n    constructor(store, router) {\n      this.store = store;\n      this.router = router;\n    }\n    canActivate(snapshot) {\n      const projectId = snapshot.params.project;\n      return this.store.pipe(select(ProjectsSelectors.getProjectById(projectId)), switchMap(project => {\n        if (!project) {\n          this.router.navigate(['/projects']);\n          return of(false);\n        }\n        this.store.dispatch(new SelectProject(projectId));\n        return of(true);\n      }));\n    }\n  }\n  ProjectExistsGuard.ɵfac = function ProjectExistsGuard_Factory(t) {\n    return new (t || ProjectExistsGuard)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router));\n  };\n  ProjectExistsGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectExistsGuard,\n    factory: ProjectExistsGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return ProjectExistsGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}