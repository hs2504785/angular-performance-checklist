{"ast":null,"code":"import { pluck, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nexport var Breakpoint = /*#__PURE__*/(() => {\n  (function (Breakpoint) {\n    Breakpoint[\"Small\"] = \"small$\";\n    Breakpoint[\"Medium\"] = \"medium$\";\n    Breakpoint[\"Desktop\"] = \"desktop$\";\n  })(Breakpoint || (Breakpoint = {}));\n  return Breakpoint;\n})();\nexport let BreakpointService = /*#__PURE__*/(() => {\n  class BreakpointService {\n    constructor(breakPointObserver) {\n      this.breakPointObserver = breakPointObserver;\n      this.setupBreakpoints();\n    }\n    getAllBreakpoints() {\n      return {\n        [Breakpoint.Small]: this._small$,\n        [Breakpoint.Medium]: this._medium$,\n        [Breakpoint.Desktop]: this._desktop$\n      };\n    }\n    getBreakpoint(breakpoint) {\n      const breakpoints = this.getAllBreakpoints();\n      return breakpoints[breakpoint];\n    }\n    setupBreakpoints() {\n      const small$ = this.breakPointObserver.observe(['(max-width: 600px)']).pipe(pluck('matches'), shareReplay(1));\n      const medium$ = this.breakPointObserver.observe(['(min-width: 600px) and (max-width: 992px)']).pipe(pluck('matches'), shareReplay(1));\n      const desktop$ = this.breakPointObserver.observe(['(min-width: 992px)']).pipe(pluck('matches'), shareReplay(1));\n      this._small$ = small$;\n      this._medium$ = medium$;\n      this._desktop$ = desktop$;\n    }\n  }\n  BreakpointService.ɵfac = function BreakpointService_Factory(t) {\n    return new (t || BreakpointService)(i0.ɵɵinject(i1.BreakpointObserver));\n  };\n  BreakpointService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BreakpointService,\n    factory: BreakpointService.ɵfac,\n    providedIn: 'root'\n  });\n  return BreakpointService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}