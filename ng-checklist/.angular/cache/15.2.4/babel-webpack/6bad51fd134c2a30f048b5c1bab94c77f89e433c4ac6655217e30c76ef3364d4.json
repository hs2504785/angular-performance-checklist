{"ast":null,"code":"import { NavigationEnd, NavigationStart } from '@angular/router';\nimport { merge } from 'rxjs';\nimport { filter, mapTo } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/progress-bar\";\nfunction AppComponent_mat_progress_bar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-bar\", 1);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(router) {\n      this.router = router;\n    }\n    ngOnInit() {\n      const navigationStart$ = this.router.events.pipe(filter(event => event instanceof NavigationStart), mapTo(true));\n      const navigationEnd$ = this.router.events.pipe(filter(event => event instanceof NavigationEnd), mapTo(false));\n      this.loading$ = merge(navigationStart$, navigationEnd$);\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"apc-root\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[\"mode\", \"indeterminate\", 4, \"ngIf\"], [\"mode\", \"indeterminate\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_mat_progress_bar_0_Template, 1, 0, \"mat-progress-bar\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelement(2, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.loading$));\n      }\n    },\n    dependencies: [i2.NgIf, i1.RouterOutlet, i3.MatProgressBar, i2.AsyncPipe],\n    styles: [\"mat-progress-bar[_ngcontent-%COMP%]{position:fixed}\"],\n    changeDetection: 0\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}