{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { combineLatest } from 'rxjs';\nimport { CheckAll, ToggleFavorite, ToggleItem, UncheckAll } from '../../projects/state/projects.actions';\nimport { selectOnce } from '../../shared/operators';\nimport { SetCategoriesFilter } from '../state/checklist.actions';\nimport { ChecklistSelectors } from '../state/checklist.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"../../shared/breakpoint.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../checklist-list/checklist-list.component\";\nimport * as i5 from \"../checklist-list/checklist-list-item.component\";\nimport * as i6 from \"../checklist-cta-bar/checklist-cta-bar.component\";\nfunction ListViewComponent_ac_checklist_list_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ac-checklist-list-item\", 3);\n    i0.ɵɵlistener(\"toggleItem\", function ListViewComponent_ac_checklist_list_item_4_Template_ac_checklist_list_item_toggleItem_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleItem($event));\n    })(\"toggleFavorite\", function ListViewComponent_ac_checklist_list_item_4_Template_ac_checklist_list_item_toggleFavorite_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleFavorite($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", item_r1);\n  }\n}\nexport let ListViewComponent = /*#__PURE__*/(() => {\n  class ListViewComponent {\n    constructor(store, breakpointService) {\n      this.store = store;\n      this.breakpointService = breakpointService;\n    }\n    ngOnInit() {\n      this.items$ = this.store.pipe(select(ChecklistSelectors.getItemsFromSelectedCategory));\n      this.filter$ = this.store.pipe(select(ChecklistSelectors.getCategoriesFilter));\n      const {\n        medium$,\n        desktop$\n      } = this.breakpointService.getAllBreakpoints();\n      this.showActionButtons$ = combineLatest(medium$, desktop$, (medium, desktop) => medium || desktop);\n    }\n    toggleItem(item) {\n      this.store.dispatch(new ToggleItem(item));\n    }\n    setFilter(filter) {\n      this.store.dispatch(new SetCategoriesFilter(filter));\n    }\n    checkAllItems() {\n      this.getSelectedCategory().subscribe(category => this.store.dispatch(new CheckAll(category)));\n    }\n    uncheckAllItems() {\n      this.getSelectedCategory().subscribe(category => this.store.dispatch(new UncheckAll(category)));\n    }\n    toggleFavorite(item) {\n      this.store.dispatch(new ToggleFavorite(item));\n    }\n    trackById(_, item) {\n      return item.id;\n    }\n    getSelectedCategory() {\n      return this.store.pipe(selectOnce(ChecklistSelectors.getSelectedCategory));\n    }\n  }\n  ListViewComponent.ɵfac = function ListViewComponent_Factory(t) {\n    return new (t || ListViewComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.BreakpointService));\n  };\n  ListViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListViewComponent,\n    selectors: [[\"ac-list-view\"]],\n    decls: 6,\n    vars: 10,\n    consts: [[3, \"filter\", \"showActionButtons\", \"filterChange\", \"checkAll\", \"uncheckAll\"], [1, \"checklist-items\"], [3, \"item\", \"toggleItem\", \"toggleFavorite\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"item\", \"toggleItem\", \"toggleFavorite\"]],\n    template: function ListViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ac-checklist-cta-bar\", 0);\n        i0.ɵɵlistener(\"filterChange\", function ListViewComponent_Template_ac_checklist_cta_bar_filterChange_0_listener($event) {\n          return ctx.setFilter($event);\n        })(\"checkAll\", function ListViewComponent_Template_ac_checklist_cta_bar_checkAll_0_listener() {\n          return ctx.checkAllItems();\n        })(\"uncheckAll\", function ListViewComponent_Template_ac_checklist_cta_bar_uncheckAll_0_listener() {\n          return ctx.uncheckAllItems();\n        });\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ac-checklist-list\", 1);\n        i0.ɵɵtemplate(4, ListViewComponent_ac_checklist_list_item_4_Template, 1, 1, \"ac-checklist-list-item\", 2);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"filter\", i0.ɵɵpipeBind1(1, 4, ctx.filter$))(\"showActionButtons\", i0.ɵɵpipeBind1(2, 6, ctx.showActionButtons$));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 8, ctx.items$))(\"ngForTrackBy\", ctx.trackById);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ChecklistListComponent, i5.ChecklistListItemComponent, i6.ChecklistCtaBarComponent, i3.AsyncPipe]\n  });\n  return ListViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}